package medium;public class Solution450 {    public class TreeNode {        int val;        TreeNode left;        TreeNode right;        TreeNode(int x) { val = x; }    }    public TreeNode deleteNode(TreeNode root, int key) {        if (root == null) return null;        if (root.val == key) {            //分情况            //当前点为叶子节点            if (root.left == null && root.right == null) {                return null;            }            //当前节点只有一个叶子节点            if (root.left == null) {                return root.right;            }            if (root.right == null) {                return root.left;            }            //当前节点有2个子节点            TreeNode min = getMin(root.right);            root.val = min.val;            root.right = deleteNode(root.right, min.val); //删除替换的那个节点        }        if (root.val > key) {            root.left = deleteNode(root.left, key);        }        if (root.val < key) {            root.right = deleteNode(root.right, key);        }        return root;    }    TreeNode getMin(TreeNode node) {        // BST 最左边的就是最⼩的        while (node.left != null) node = node.left;        return node;    }}